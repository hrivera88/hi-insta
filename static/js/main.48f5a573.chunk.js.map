{"version":3,"sources":["library/socket/index.js","common/constants.js","library/apiServices/webApi.js","library/redux/constants/types/index.js","library/redux/actions/index.js","pages/intro/index.jsx","components/header/index.js","components/threadsList/index.jsx","pages/threads/index.jsx","components/chatInput/index.jsx","components/action-bar/index.jsx","components/chat/index.jsx","pages/chat/index.jsx","components/monitor-chat/index.jsx","pages/monitor-chat/index.jsx","App.js","reportWebVitals.js","library/redux/reducers/index.js","library/redux/rootReducer.js","library/redux/index.js","index.js"],"names":["SocketService","this","socket","token","localStorage","getItem","decodedToken","jwt","decode","complete","io","process","secure","transports","query","authToken","channel_id","payload","channelId","org_name","orgName","withCredentials","on","error","console","log","id","connected","Observable","observer","data","next","emit","undefined","instance","sendRequest","url","init_settings","a","fetch","response","json","responseJson","err","no_result","threadlisting","view_history","limit","decoded","concat","parseInt","method","headers","Authorization","Accept","messagelisting","thread_id","liveChatMessageslist","crm_id","user_id","assignChatToUser","threadObj","init","body","JSON","stringify","sendMessage","messageObj","fetchSingleThread","updateThreadStatus","updateLiveChatThreadStatus","deleteThread","thread_type","SET_MESSAGES","SET_THREAD_LISTING","SET_SIGNLE_THREAD","SET_SINGLE_MESSAGE","SET_USER_DATA","SET_VISITOR_LOADING","SET_AGENT_LOADING","SET_CROSS_BUTTON_STATUS","SET_CHATTING_WITH","setMessages","type","setSingleMessage","setThreadListing","setUserData","setChatCrossButtonStatus","setChatWith","setSingleThread","Intro","className","xmlns","width","height","viewBox","d","transform","fill","fontSize","fontFamily","x","y","Header","props","fetchLiveChatMessagesEventSub","fetchSMSMessagesEventSub","isThreadUpdatedEventSub","updatedThreadCrmEventEventSub","isAliveChatUpdatedEventSub","threadsList","threadListingType","handleBack","pageType","setredirect","toast","actionBar","useState","threadList","setthreadList","chattingWith","useSelector","state","global","tempMessageId","dispatch","useDispatch","useEffect","getInstance","socketEventSub","unsubscribe","fetchLiveChatMessages","subscribe","pushedmessage","isThreadExist","length","find","item","created_by","createdAt","newThread","lastmessage_at","updated_at","created_at","moment","valueOf","phone_mobile","alivesecure_key","aliveOpentokSession","status","thread_status","status_timestamp","timestamp","assignedTo","phone_number","smsblocked","user_blocked","platform","sms_platform","alivesms_phone_number","crmData","campaign_pending","history_thread_timestamp","unix","format","last_active_time","fromNow","message_id","message_content","From","direction","media_url","fetchSMSMessages","isThreadUpdated","updatedThread","threadStatus","updatedThreads","filter","thread","threadId","setTimeout","updatedThreadCrmEvent","updatedThreadCrm","updateThreadsArray","threadIndex","findIndex","el","isAliveChatUpdated","onClick","style","cursor","padding","cx","cy","r","ThreadList","threadListing","redirectDataObj","redirect","fetchThreadList","chatAssignCheck","ToastContainer","lastBookElementRef","to","pathname","overflow","map","index","ref","email","first_name","last_name","Queue","userData","instant_token","useParams","setredirectDataObj","isIntro","setisIntro","setlimit","React","createRef","setItem","then","resp","ph","catch","jwtToken","getJwtToken","jwtData","curTime","Date","toLocaleString","threadViewStatus","e","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prev","observe","useLayoutEffect","threadListType","threadExistedObj","ChatInput","currentMessage","setCurrentMessage","activeThread","parse","sendSMSMessage","replyBody","now","message","visible_to_channel","screen_name","psid","userjoined","user_opt","user_optfalse","channel_number","tags","files","isVideo","mediaurl","bandwidthError","campaigns_applied","fbPageID","sendLiveChatMessage","crmId","oldCrmId","old_crm_id","firstName","lastName","notes","phoneMobile","company","image","address","billing_address","billing_city","billing_country","billing_state","billing_zip","linkedin","instagram","whatsapp","accountid","snapchat","wechat","viber","faq_question","youtube","facebook","twitter","companytitle","city","user_state","country","xip","alivesecureKey","userId","channelName","channel_name","connect_botchain","connect_orgbot","order_viewed","orderViewed","order_viewed_by","orderViewedBy","livechatimageurl","orgbot_content","agent_bot_id","widget_id","googletrackerid","userBlocked","transferchat_from","message_type","route","sceenName","profile_url","event_mode","replyToLiveChatMessage","title","fillRule","clipRule","name","placeholder","value","onChange","event","preventDefault","target","onKeyPress","key","Action","closeChat","Chat","messagesList","setactionBar","messagesRef","useRef","firstMessageElementRef","scrollIntoView","position","top","shortCode","containerId","ChatView","setactiveThread","location","fetchThreadDetails","threadCloseObj","thread_end_chat_by","closeThread","deleteActiveThreadFn","deleteActiveThread","getMessagesList","sort","b","parseFloat","Items","MonitorChat","assignChatToUsers","MonitorView","setActiveThread","agent_bot_name","thread_start_chat","accept","read_by","bot_user_id","chat_accept_flag","orgUserBotId","ress","code","joinLiveChatMessageRoom","history","createBrowserHistory","App","routes","path","Component","exact","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","agentLoading","visitorLoading","crossButtonStatus","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48f5a573.chunk.js","sourcesContent":["import * as io from \"socket.io-client\";\nimport { Observable } from \"rxjs\";\nimport { SOCKET_HOST_ADDRESS,FETCH_SMS_EVENT, UPATE_THREAD_CRM_EVENT, SMS_THREAD_UPDATE_EVENT,  FETCH_LIVECHAT_MESSAGES_EVENT, BUDDYCHAT_TYPING_EVENT, LIVECHAT_THREAD_UPDATE_EVENT, REPLAYTO_LIVECHAT_MESSAGES_EVENT, JOIN_BUDDY_CHATROOM_EVENT } from \"../../common/constants\";\nimport jwt from \"jsonwebtoken\";\nexport default class SocketService {\n  static socket;\n  static instance;\n  static getInstance() {\n    if (SocketService.instance === undefined) {\n      SocketService.instance = new SocketService();\n    }\n\n    return SocketService.instance;\n  }\n  constructor() {\n    if (!this.socket) {\n      const token = localStorage.getItem(\"user\");\n      var decodedToken = jwt.decode(token, { complete: true });\n      const socket_address = SOCKET_HOST_ADDRESS;\n      this.socket = io.connect(socket_address, {\n        secure: true,\n        transports: [\"websocket\", \"polling\"],\n        query: {\n          authToken: token,\n          channel_id: decodedToken?.payload?.channelId,\n          org_name : decodedToken?.payload?.orgName\n        },\n        withCredentials: true,\n      });\n      this.socket.on(\"connect_error\", (error) => {\n        console.log(\"Socket disconnect  connect_error\", error); // undefined\n      });\n      this.socket.on(\"disconnect\", (error) => {\n        console.log(\n          \"Socket disconnect\",\n          this.socket,\n          this.socket.id,\n          this.socket.connected,\n          error\n        ); // undefined\n      });\n      // client-side\n      this.socket.on(\"connect\", () => {\n        console.log(\n          \"Socket is connected\",\n          this.socket,\n          this.socket.id,\n          this.socket.connected\n        ); // x8WIv7-mJelg7on_ALbx\n      });\n    }\n    // return this.socket; livechat-message\n  }\n  fetchSMSMessages() {\n    let observable = new Observable((observer) => {\n      this.socket.on(FETCH_SMS_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  }\n  fetchLiveChatMessages() {\n    let observable = new Observable((observer) => {\n      this.socket.on(FETCH_LIVECHAT_MESSAGES_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  }\n  replyToLiveChatMessage(data) {\n      this.socket.emit(REPLAYTO_LIVECHAT_MESSAGES_EVENT, (data)) \n  };\n  joinLiveChatMessageRoom(data) {\n    this.socket.emit(JOIN_BUDDY_CHATROOM_EVENT, (data)) \n};\n  isAliveChatUpdated() {\n    let observable = new Observable((observer) => {\n      this.socket.on(LIVECHAT_THREAD_UPDATE_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  };\n  buddyChatIsTyping() {\n    let observable = new Observable((observer) => {\n      this.socket.on(BUDDYCHAT_TYPING_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  };\n  isThreadUpdated() {\n    let observable = new Observable((observer) => {\n      this.socket.on(SMS_THREAD_UPDATE_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  }; \n  updatedThreadCrmEvent() {\n    let observable = new Observable((observer) => {\n      this.socket.on(UPATE_THREAD_CRM_EVENT, (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  } \n}\n","const SOCKET_HOST_ADDRESS = process.env.REACT_APP_SOCKET_HOST_ADDRESS,\n  SERVER_URL = process.env.REACT_APP_SERVER_URL,\n  GET_JWT_TOKEN = \"public/1.0/get-instant-token?id=\",\n  THREAD_LISTING = \"public/1.0/get-channel-threads\",\n  MESSAGE_LISTING = \"1.0/sms/get-conversation-last-msg\",\n  ASSIGN_CHAT = \"1.0/thread/update-livechat-thread\",\n  SEND_MESSAGE = \"1.0/sms/reply\",\n  FETCH_SINGLE_THREAD = \"1.0/thread/get-sms-thread-by-id\",\n  UPDATE_THREAD = \"1.0/thread/update-thread\",\n  UPDATE_LIVECHAT_THREAD = \"1.0/thread/update-livechat-thread\",\n  Fetch_LIVECHAT_MESSAGES = \"1.0/thread/get-thread-by-crm-id\",\n  DELETE_THREAD = \"1.0/thread/delete-thread\",\n  DELETE_CRM_THREAD = \"1.0/thread/delete-crm-threads\",\n  // SOCKET EVENTS\n  FETCH_SMS_EVENT = \"smsMessages\",\n  FETCH_LIVECHAT_MESSAGES_EVENT = \"livechat-message\",\n  REPLAYTO_LIVECHAT_MESSAGES_EVENT = \"livechat-message\",\n  JOIN_BUDDY_CHATROOM_EVENT = \"buddychat-joinRoom\",\n  LIVECHAT_THREAD_UPDATE_EVENT = \"alivechat-threadUpdate\",\n  BUDDYCHAT_TYPING_EVENT = \"buddychat-message-typing\",\n  SMS_THREAD_UPDATE_EVENT = \"updatedThreadEvent\",\n  UPATE_THREAD_CRM_EVENT = \"updatedThreadCrmEvent\";\n  \n\n\nexport {\n  SOCKET_HOST_ADDRESS,\n  SERVER_URL,\n  GET_JWT_TOKEN,\n  THREAD_LISTING,\n  MESSAGE_LISTING,\n  ASSIGN_CHAT,\n  SEND_MESSAGE,\n  FETCH_SINGLE_THREAD,\n  UPDATE_THREAD,\n  UPDATE_LIVECHAT_THREAD,\n  Fetch_LIVECHAT_MESSAGES,\n  DELETE_THREAD,\n  DELETE_CRM_THREAD,\n  SMS_THREAD_UPDATE_EVENT,\n  UPATE_THREAD_CRM_EVENT,\n  FETCH_SMS_EVENT,\n  FETCH_LIVECHAT_MESSAGES_EVENT,\n  REPLAYTO_LIVECHAT_MESSAGES_EVENT,\n  JOIN_BUDDY_CHATROOM_EVENT,\n  LIVECHAT_THREAD_UPDATE_EVENT,\n  BUDDYCHAT_TYPING_EVENT,\n};\n","import {\n  SERVER_URL,\n  GET_JWT_TOKEN,\n  THREAD_LISTING,\n  MESSAGE_LISTING,\n  ASSIGN_CHAT,\n  SEND_MESSAGE,\n  FETCH_SINGLE_THREAD,\n  UPDATE_THREAD,\n  UPDATE_LIVECHAT_THREAD,\n  Fetch_LIVECHAT_MESSAGES,\n  DELETE_THREAD,\n  DELETE_CRM_THREAD,\n} from \"../../common/constants\";\nimport jwt from \"jsonwebtoken\";\n// EndPoints\n\nconst sendRequest = async (url, init_settings) => {\n  url = SERVER_URL + url;\n  try {\n    let response = await fetch(url, init_settings);\n    let responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    // console.log(\"errorrrrrrr\", error);\n    let err = [];\n    err.error = error;\n    err.no_result = true;\n    return err;\n  }\n};\nconst getJwtToken = (instant_token) => {\n  let url = GET_JWT_TOKEN + instant_token;\n  let init = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return sendRequest(url, init);\n};\nconst threadlisting = (token, view_history, limit) => {\n  var decoded = jwt.decode(token, { complete: true });\n  let url =\n    THREAD_LISTING.concat(\"?channel_id=\")\n      .concat(decoded?.payload?.channelId)\n      .concat(\"&org_name=\")\n      .concat(decoded?.payload?.orgName) +\n    `&view_history=${parseInt(view_history)}&limit=${limit}`;\n  let init = {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return sendRequest(url, init);\n};\nconst messagelisting = (org_name, thread_id, token, limit) => {\n  let url =\n    MESSAGE_LISTING.concat(\"?org_name=\")\n      .concat(org_name)\n      .concat(\"&thread_id=\")\n      .concat(thread_id) + `&limit=${limit}`;\n  let init = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  };\n  return sendRequest(url, init);\n};\nconst liveChatMessageslist = (org_name, crm_id, user_id, token, limit) => {\n  let url =\n    Fetch_LIVECHAT_MESSAGES.concat(\"?org_name=\")\n      .concat(org_name)\n      .concat(\"&crm_id=\")\n      .concat(crm_id)\n      .concat(\"&user_id=\")\n      .concat(user_id) + `&limit=${limit}`;\n  let init = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  };\n  return sendRequest(url, init);\n};\nconst assignChatToUser = (threadObj, token) => {\n  let url = ASSIGN_CHAT;\n  let init = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(threadObj),\n  };\n  return sendRequest(url, init);\n};\nconst sendMessage = (messageObj, token) => {\n  // console.log(\"send message data ======> \", messageObj);\n  let url = SEND_MESSAGE;\n  let init = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(messageObj),\n  };\n  return sendRequest(url, init);\n};\nconst fetchSingleThread = (thread_id, org_name) => {\n  const token = localStorage.getItem(\"user\");\n  let url = `${FETCH_SINGLE_THREAD}?thread_id=${thread_id}&org_name=${org_name}`;\n  let init = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  };\n  return sendRequest(url, init);\n};\nconst updateThreadStatus = (threadObj, token) => {\n  let url = UPDATE_THREAD;\n  let init = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(threadObj),\n  };\n  return sendRequest(url, init);\n};\nconst updateLiveChatThreadStatus = (threadObj, token) => {\n  let url = UPDATE_LIVECHAT_THREAD;\n  let init = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(threadObj),\n  };\n  return sendRequest(url, init);\n};\nconst deleteThread = ({ org_name, thread_id, thread_type, crm_id }, token) => {\n  let url = `${DELETE_THREAD}?org_name=${org_name}&thread_id=${thread_id}`;\n  if (thread_type === \"livechat\") {\n    url = `${DELETE_CRM_THREAD}?org_name=${org_name}&crm_id=${crm_id}`;\n  }\n  // let url = `${thread_type === 'livechat' ?DELETE_CRM_THREAD: DELETE_THREAD}?org_name=${org_name}&${thread_type === 'livechat' ? 'crm_id'=${}: DELETE_THREAD}`;\n  let init = {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  };\n  return sendRequest(url, init);\n};\nexport {\n  sendRequest,\n  getJwtToken,\n  threadlisting,\n  messagelisting,\n  assignChatToUser,\n  sendMessage,\n  fetchSingleThread,\n  updateThreadStatus,\n  updateLiveChatThreadStatus,\n  liveChatMessageslist,\n  deleteThread,\n};\n","const SET_MESSAGES = \"SET_MESSAGES\";\nconst SET_THREAD_LISTING = \"SET_THREAD_LISTING\";\nconst SET_SIGNLE_THREAD = \"SET_SIGNLE_THREAD\";\nconst SET_SINGLE_MESSAGE = 'SET_SINGLE_MESSAGE';\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_VISITOR_LOADING = 'SET_VISITOR_LOADING';\nconst SET_AGENT_LOADING = 'SET_AGENT_LOADING';\nconst SET_CROSS_BUTTON_STATUS = 'SET_CROSS_BUTTON_STATUS';\nconst SET_CHATTING_WITH = 'SET_CHATTING_WITH';\nexport {\n    SET_MESSAGES,\n    SET_THREAD_LISTING,\n    SET_SINGLE_MESSAGE,\n    SET_USER_DATA,\n    SET_AGENT_LOADING,\n    SET_VISITOR_LOADING,\n    SET_CROSS_BUTTON_STATUS,\n    SET_CHATTING_WITH,\n    SET_SIGNLE_THREAD\n}\n","import {\n  SET_MESSAGES,\n  SET_THREAD_LISTING,\n  SET_SINGLE_MESSAGE,\n  SET_USER_DATA,\n  SET_VISITOR_LOADING,\n  SET_AGENT_LOADING,\n  SET_CROSS_BUTTON_STATUS,\n  SET_CHATTING_WITH,\n  SET_SIGNLE_THREAD\n} from \"../constants/types\";\n\nexport const setMessages = (payload) => ({\n  type: SET_MESSAGES,\n  payload,\n});\nexport const setSingleMessage = (payload) => ({\n  type: SET_SINGLE_MESSAGE,\n  payload,\n});\nexport const setThreadListing = (payload) => ({\n  type: SET_THREAD_LISTING,\n  payload,\n});\nexport const setUserData = (payload) => ({\n  type: SET_USER_DATA,\n  payload,\n});\nexport const setVisitorLoading = (payload) => ({\n  type: SET_VISITOR_LOADING,\n  payload,\n});\nexport const setAgentLoading = (payload) => ({\n  type: SET_AGENT_LOADING,\n  payload,\n});\nexport const setChatCrossButtonStatus = (payload) => ({\n  type: SET_CROSS_BUTTON_STATUS,\n  payload,\n});\nexport const setChatWith = (payload) => ({\n  type: SET_CHATTING_WITH,\n  payload,\n});\nexport const setSingleThread = (payload) => ({\n  type: SET_SIGNLE_THREAD,\n  payload,\n});\n","const Intro = () => {\n  return (\n    <main className=\"h-screen w-screen bg-main flex flex-col items-center justify-center\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"243.809\"\n        className=\"mb-10\"\n        height=\"86.544\"\n        viewBox=\"0 0 243.809 86.544\"\n      >\n        <path\n          d=\"M51.456,40.991C43.1,41.307,38.492,45.46,37.9,45.985V16.4a27.171,27.171,0,0,0-7.474-1.681c-4.376-.147-7.76.963-9.181,3.077A8.158,8.158,0,0,0,20,22.643V99.682H38.012V70.156c0-9.761,5.2-12.422,10.58-12.422,4.927,0,10.114,1.576,10.114,10.845v31.1H76.719v-34.8C76.719,46.494,64.352,40.5,51.456,40.991Z\"\n          transform=\"translate(-20 -14.706)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M45.948,21.349a11.763,11.763,0,0,0-6.822,1.787q-2.566,1.791-2.573,6.162V78.4H54.565V23.022c-.441-.143-1.492-.467-3.127-.95A19.55,19.55,0,0,0,45.948,21.349Z\"\n          transform=\"translate(33.029 6.576)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M78.195,36.565c-8.424-.307-15.061,4.809-16.407,6.154V17.783c-.446-.143-1.475-.467-3.094-.946a19.007,19.007,0,0,0-5.456-.727,11.892,11.892,0,0,0-6.864,1.778q-2.6,1.8-2.594,6.162V64.081c0,25.2,15.541,32.67,31.1,32.67,12.934,0,30.875-8.336,30.875-30.1C105.758,53.114,97.309,37.258,78.195,36.565ZM74.491,80.2c-9.353,0-12.813-7.293-12.813-13.6,0-4.931,3.182-13.586,12.813-13.586,9.488,0,12.808,8.1,12.808,13.586C87.3,73.607,83.029,80.2,74.491,80.2Z\"\n          transform=\"translate(56.182 -10.208)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M114.638,22.072a19.48,19.48,0,0,0-5.477-.723,11.736,11.736,0,0,0-6.822,1.787c-1.719,1.194-2.568,3.245-2.568,6.162V51.775q0,11.646-10.513,11.64-10.53,0-10.522-11.64V23.022c-.454-.143-1.5-.467-3.136-.95a19.492,19.492,0,0,0-5.473-.723,11.8,11.8,0,0,0-6.835,1.787q-2.566,1.791-2.573,6.162V55.129c0,6.545,2.459,24.839,28.538,24.839,25.583,0,28.521-18.294,28.521-24.839V23.022C117.328,22.879,116.285,22.555,114.638,22.072Z\"\n          transform=\"translate(110.444 6.576)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M36.512,24.128A9.176,9.176,0,1,1,45.688,33.3,9.181,9.181,0,0,1,36.512,24.128Z\"\n          transform=\"translate(32.898 -13.934)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M60.718,24.128A9.176,9.176,0,1,1,69.894,33.3,9.181,9.181,0,0,1,60.718,24.128Z\"\n          transform=\"translate(110.444 -13.934)\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M70,24.128A9.174,9.174,0,1,1,79.18,33.3,9.178,9.178,0,0,1,70,24.128Z\"\n          transform=\"translate(140.193 -13.934)\"\n          fill=\"#fff\"\n        />\n        <g transform=\"translate(233.972 30.287)\">\n          <path\n            d=\"M77.362,22.512h-1.7v-.6h4.124v.6h-1.7v5.036h-.719Z\"\n            transform=\"translate(-75.66 -21.911)\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"M76.882,21.911h.841l1.093,3.027.412,1.148h.034l.4-1.148,1.085-3.027h.841v5.637H80.9v-3.1c0-.5.05-1.169.092-1.665h-.034l-.454,1.253-1.085,2.947h-.4l-1.089-2.947-.45-1.253h-.034c.034.5.1,1.169.1,1.665v3.1h-.664Z\"\n            transform=\"translate(-71.745 -21.911)\"\n            fill=\"#fff\"\n          />\n        </g>\n      </svg>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"112\"\n        height=\"48\"\n        viewBox=\"0 0 112 48\"\n      >\n        <text\n          transform=\"translate(56 38)\"\n          fill=\"#fff\"\n          fontSize=\"41\"\n          fontFamily=\"HibuCoText-Regular, Hibu Co Text, Open Sans\"\n        >\n          <tspan x=\"-55\" y=\"0\">\n            CHAT\n          </tspan>\n        </text>\n      </svg>\n    </main>\n  );\n};\n\nexport default Intro;\n","import { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport moment from \"moment\";\nimport SocketService from \"../../library/socket\";\nimport {\n  setThreadListing,\n  setSingleThread,\n  setSingleMessage,\n} from \"../../library/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import { toast } from \"react-toastify\";\n// import Back from \"../../components/icons/back\";\n// import Cross from \"../../components/icons/cross\";\nconst Header = (props) => {\n  const {\n    threadsList,\n    threadListingType,\n    handleBack,\n    pageType,\n    thread_id,\n    setredirect,\n    toast,\n    actionBar,\n  } = props;\n  const [threadList, setthreadList] = useState();\n  const { chattingWith } = useSelector((state) => state.global);\n  let socket,\n    fetchLiveChatMessagesEventSub,\n    fetchSMSMessagesEventSub,\n    isThreadUpdatedEventSub,\n    updatedThreadCrmEventEventSub,\n    isAliveChatUpdatedEventSub,\n    tempMessageId = \"\";\n  const dispatch = useDispatch();\n  // console.log(pageType, \"pageType\");\n  useEffect(() => {\n    setthreadList(threadsList);\n    // eslint-disable-next-line\n    socket = SocketService.getInstance();\n    socketEventSub();\n\n    return () => {\n      fetchLiveChatMessagesEventSub?.unsubscribe();\n      fetchSMSMessagesEventSub?.unsubscribe();\n      isThreadUpdatedEventSub?.unsubscribe();\n      updatedThreadCrmEventEventSub?.unsubscribe();\n      isAliveChatUpdatedEventSub.unsubscribe();\n    };\n    // eslint-disable-next-line\n  }, [threadList, thread_id]);\n  const socketEventSub = () => {\n    fetchLiveChatMessagesEventSub = socket\n      ?.fetchLiveChatMessages()\n      .subscribe((pushedmessage) => {\n        if (parseInt(pageType) === 1) {\n          if (parseInt(threadListingType) === 2) {\n            let isThreadExist =\n              threadList &&\n              threadList?.length > 0 &&\n              threadList?.find(\n                (item) => item.thread_id === pushedmessage.thread_id\n              );\n            if (\n              (!isThreadExist || isThreadExist === {}) &&\n              pushedmessage?.created_by === undefined &&\n              pushedmessage?.user_id === undefined\n            ) {\n              // console.log(\"creating new thread, live chat\");\n              const createdAt =\n                pushedmessage?.newThread?.lastmessage_at ||\n                pushedmessage?.newThread?.updated_at ||\n                pushedmessage?.newThread?.created_at ||\n                moment().valueOf();\n              let newThread = {\n                phone_mobile: pushedmessage?.newThread?.phone_mobile || \"\",\n                thread_type: pushedmessage?.newThread?.thread_type,\n                thread_id: pushedmessage?.newThread?.thread_id,\n                org_name: pushedmessage?.newThread?.org_name,\n                crm_id: pushedmessage?.newThread?.crm_id,\n                alivesecure_key: pushedmessage?.newThread?.alivesecure_key,\n                aliveOpentokSession:\n                  pushedmessage?.newThread?.aliveOpentokSession || \"\",\n                status: pushedmessage?.newThread?.thread_status,\n                status_timestamp: pushedmessage?.newThread?.updated_at,\n                timestamp: pushedmessage?.newThread?.created_at,\n                created_by: pushedmessage?.created_by,\n                assignedTo: pushedmessage?.newThread?.assignedTo || \"0\",\n                phone_number: pushedmessage?.newThread?.phone_mobile || \"\",\n                smsblocked: pushedmessage?.newThread?.user_blocked\n                  ? pushedmessage?.newThread?.user_blocked\n                  : false,\n                platform: pushedmessage?.newThread?.platform || \"\",\n                sms_platform: pushedmessage?.newThread?.platform || \"\",\n                alivesms_phone_number: \"\",\n                channel_id: pushedmessage?.newThread?.channel_id,\n                crmData: pushedmessage?.newThread?.crmData || {},\n                campaign_pending:\n                  pushedmessage?.newThread?.campaign_pending || \"\",\n                lastmessage_at: pushedmessage?.newThread?.lastmessage_at,\n                history_thread_timestamp: moment\n                  .unix(createdAt / 1000)\n                  .format(\"MM/DD/YY\"),\n                last_active_time: moment.unix(createdAt / 1000).fromNow(),\n              };\n              if (threadList?.length > 0) {\n                setthreadList((state) => [...state, newThread]);\n              } else {\n                setthreadList([newThread]);\n              }\n              dispatch(setSingleThread(newThread));\n            }\n          }\n        } else {\n          if (\n            pushedmessage?.newThread?.thread_id === thread_id &&\n            tempMessageId !== pushedmessage.message_id\n          ) {\n            // console.log(\"Message\", tempMessageId);\n            tempMessageId = pushedmessage.message_id;\n            dispatch(\n              setSingleMessage({\n                message_content: pushedmessage.message_content || \"\",\n                created_at: pushedmessage.created_at,\n                created_by: pushedmessage.created_by,\n                From: pushedmessage.From,\n                direction: pushedmessage.direction,\n                media_url: pushedmessage.media_url || [],\n              })\n            );\n          }\n        }\n      });\n    fetchSMSMessagesEventSub = socket\n      ?.fetchSMSMessages()\n      .subscribe((pushedmessage) => {\n        // console.log(\"pushedmessage\", pushedmessage);\n        if (parseInt(pageType) === 1) {\n          if (parseInt(threadListingType) === 2) {\n            let isThreadExist =\n              threadList &&\n              threadList?.length > 0 &&\n              threadList?.find(\n                (item) => item.thread_id === pushedmessage.thread_id\n              );\n            // console.log(\n            //   \"creating new thread,found existing thread\",\n            //   isThreadExist\n            // );\n            if (!isThreadExist || isThreadExist === {}) {\n              // console.log(\"creating new thread,SMS chat\");\n              const createdAt =\n                pushedmessage?.newThread?.lastmessage_at ||\n                pushedmessage?.newThread?.updated_at ||\n                pushedmessage?.newThread?.created_at ||\n                moment().valueOf();\n              let newThread = {\n                phone_mobile: pushedmessage?.newThread?.phone_mobile,\n                thread_type: pushedmessage?.newThread?.thread_type,\n                thread_id: pushedmessage?.newThread?.thread_id,\n                org_name: pushedmessage?.newThread?.org_name,\n                crm_id: pushedmessage?.newThread?.crm_id,\n                alivesecure_key: pushedmessage?.newThread?.alivesecure_key,\n                aliveOpentokSession:\n                  pushedmessage?.newThread?.aliveOpentokSession || \"\",\n                status: pushedmessage?.newThread?.thread_status,\n                status_timestamp: pushedmessage?.newThread?.updated_at,\n                timestamp: pushedmessage?.newThread?.created_at,\n                created_by: pushedmessage?.created_by,\n                assignedTo: pushedmessage?.assignedTo,\n                phone_number: pushedmessage?.newThread?.phone_mobile || \"\",\n                smsblocked: pushedmessage?.newThread?.user_blocked\n                  ? pushedmessage?.newThread?.user_blocked\n                  : false,\n                platform: pushedmessage?.newThread?.platform || \"\",\n                sms_platform: pushedmessage?.newThread?.platform || \"\",\n                alivesms_phone_number: \"\",\n                channel_id: pushedmessage?.newThread?.channel_id,\n                crmData: pushedmessage?.newThread?.crmData || {},\n                campaign_pending:\n                  pushedmessage?.newThread?.campaign_pending || \"\",\n                lastmessage_at: pushedmessage?.newThread?.lastmessage_at,\n                history_thread_timestamp: moment\n                  .unix(createdAt / 1000)\n                  .format(\"MM/DD/YY\"),\n                last_active_time: moment.unix(createdAt / 1000).fromNow(),\n              };\n              if (threadList?.length > 0) {\n                setthreadList((state) => [...state, newThread]);\n              } else {\n                setthreadList([newThread]);\n              }\n              dispatch(setSingleThread(newThread));\n            }\n          }\n        } else {\n          // console.log(\n          //   pushedmessage?.newThread?.thread_id,\n          //   \"working in else condition...\",\n          //   thread_id\n          // );\n          if (\n            pushedmessage?.newThread?.thread_id === thread_id &&\n            tempMessageId !== pushedmessage.message_id\n          ) {\n            // console.log(pushedmessage.message_id, \"Message\", tempMessageId);\n            tempMessageId = pushedmessage.message_id;\n            dispatch(\n              setSingleMessage({\n                message_content: pushedmessage.message_content || \"\",\n                created_at: pushedmessage.created_at,\n                created_by: pushedmessage.created_by,\n                From: pushedmessage.From,\n                direction: pushedmessage.direction,\n                media_url: pushedmessage.media_url || [],\n              })\n            );\n          }\n        }\n      });\n    isThreadUpdatedEventSub = socket\n      ?.isThreadUpdated()\n      .subscribe((updatedThread) => {\n        if (\n          parseInt(threadListingType) === 2 ||\n          threadListingType === undefined\n        ) {\n          if (updatedThread && updatedThread?.threadStatus === \"deleted\") {\n            let updatedThreads = threadList?.filter(\n              (thread) => thread.thread_id !== updatedThread.threadId\n            );\n            if (!parseInt(pageType) === 1 || pageType === undefined) {\n              toast(\"Chat is Deleted by User!\");\n              setTimeout(() => {\n                setredirect(\"Home\");\n              }, 3000);\n            }\n            dispatch(setThreadListing(updatedThreads));\n          }\n        }\n      });\n    updatedThreadCrmEventEventSub = socket\n      ?.updatedThreadCrmEvent()\n      .subscribe((updatedThreadCrm) => {\n        if (parseInt(threadListingType) === 2) {\n          let updateThreadsArray = threadList;\n          if (updateThreadsArray && updateThreadsArray.length) {\n            let threadIndex = updateThreadsArray.findIndex(\n              (el) => el.thread_id === updatedThreadCrm.threadId\n            );\n            if (parseInt(threadIndex) > -1) {\n              if (\n                updateThreadsArray[parseInt(threadIndex)] &&\n                updateThreadsArray[parseInt(threadIndex)].crmData\n              ) {\n                updateThreadsArray[parseInt(threadIndex)].crmData =\n                  updatedThreadCrm?.crmData;\n                setthreadList(updateThreadsArray);\n                dispatch(setThreadListing(updateThreadsArray));\n              }\n            }\n          }\n        }\n      });\n\n    isAliveChatUpdatedEventSub = socket\n      .isAliveChatUpdated()\n      .subscribe((updateThreadStatus) => {\n        if (updateThreadStatus?.thread_status === \"closed\") {\n          if (!parseInt(pageType) === 1 || pageType === undefined) {\n            console.log(\"in state close check....\");\n            toast(\"Chat is closed by User!\");\n            setTimeout(() => {\n              setredirect(\"Home\");\n            }, 3000);\n          } else {\n            let updatedThreads = threadList?.filter(\n              (thread) => thread.thread_id !== updateThreadStatus.thread_id\n            );\n            dispatch(setThreadListing(updatedThreads));\n          }\n        }\n      });\n  };\n\n  return (\n    <>\n      {parseInt(pageType) === 1 ? (\n        <header id=\"insta-header\" className=\"bg-main fixed flex flex-row w-full justify-center items-center p-10\">\n          <section\n            id=\"threads-header\"\n            className=\"h-full flex flex-col items-center justify-center\"\n          >\n            <div className=\"logo-img h-full flex flex-col items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"98.809\"\n                className=\"mb-10\"\n                height=\"34.544\"\n                viewBox=\"0 0 243.809 86.544\"\n              >\n                <path\n                  d=\"M51.456,40.991C43.1,41.307,38.492,45.46,37.9,45.985V16.4a27.171,27.171,0,0,0-7.474-1.681c-4.376-.147-7.76.963-9.181,3.077A8.158,8.158,0,0,0,20,22.643V99.682H38.012V70.156c0-9.761,5.2-12.422,10.58-12.422,4.927,0,10.114,1.576,10.114,10.845v31.1H76.719v-34.8C76.719,46.494,64.352,40.5,51.456,40.991Z\"\n                  transform=\"translate(-20 -14.706)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M45.948,21.349a11.763,11.763,0,0,0-6.822,1.787q-2.566,1.791-2.573,6.162V78.4H54.565V23.022c-.441-.143-1.492-.467-3.127-.95A19.55,19.55,0,0,0,45.948,21.349Z\"\n                  transform=\"translate(33.029 6.576)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M78.195,36.565c-8.424-.307-15.061,4.809-16.407,6.154V17.783c-.446-.143-1.475-.467-3.094-.946a19.007,19.007,0,0,0-5.456-.727,11.892,11.892,0,0,0-6.864,1.778q-2.6,1.8-2.594,6.162V64.081c0,25.2,15.541,32.67,31.1,32.67,12.934,0,30.875-8.336,30.875-30.1C105.758,53.114,97.309,37.258,78.195,36.565ZM74.491,80.2c-9.353,0-12.813-7.293-12.813-13.6,0-4.931,3.182-13.586,12.813-13.586,9.488,0,12.808,8.1,12.808,13.586C87.3,73.607,83.029,80.2,74.491,80.2Z\"\n                  transform=\"translate(56.182 -10.208)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M114.638,22.072a19.48,19.48,0,0,0-5.477-.723,11.736,11.736,0,0,0-6.822,1.787c-1.719,1.194-2.568,3.245-2.568,6.162V51.775q0,11.646-10.513,11.64-10.53,0-10.522-11.64V23.022c-.454-.143-1.5-.467-3.136-.95a19.492,19.492,0,0,0-5.473-.723,11.8,11.8,0,0,0-6.835,1.787q-2.566,1.791-2.573,6.162V55.129c0,6.545,2.459,24.839,28.538,24.839,25.583,0,28.521-18.294,28.521-24.839V23.022C117.328,22.879,116.285,22.555,114.638,22.072Z\"\n                  transform=\"translate(110.444 6.576)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M36.512,24.128A9.176,9.176,0,1,1,45.688,33.3,9.181,9.181,0,0,1,36.512,24.128Z\"\n                  transform=\"translate(32.898 -13.934)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M60.718,24.128A9.176,9.176,0,1,1,69.894,33.3,9.181,9.181,0,0,1,60.718,24.128Z\"\n                  transform=\"translate(110.444 -13.934)\"\n                  fill=\"#fff\"\n                />\n                <path\n                  d=\"M70,24.128A9.174,9.174,0,1,1,79.18,33.3,9.178,9.178,0,0,1,70,24.128Z\"\n                  transform=\"translate(140.193 -13.934)\"\n                  fill=\"#fff\"\n                />\n                <g transform=\"translate(233.972 30.287)\">\n                  <path\n                    d=\"M77.362,22.512h-1.7v-.6h4.124v.6h-1.7v5.036h-.719Z\"\n                    transform=\"translate(-75.66 -21.911)\"\n                    fill=\"#fff\"\n                  />\n                  <path\n                    d=\"M76.882,21.911h.841l1.093,3.027.412,1.148h.034l.4-1.148,1.085-3.027h.841v5.637H80.9v-3.1c0-.5.05-1.169.092-1.665h-.034l-.454,1.253-1.085,2.947h-.4l-1.089-2.947-.45-1.253h-.034c.034.5.1,1.169.1,1.665v3.1h-.664Z\"\n                    transform=\"translate(-71.745 -21.911)\"\n                    fill=\"#fff\"\n                  />\n                </g>\n              </svg>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"52\"\n                height=\"22\"\n                viewBox=\"0 0 112 48\"\n              >\n                <text\n                  transform=\"translate(56 38)\"\n                  fill=\"#fff\"\n                  fontSize=\"41\"\n                  fontFamily=\"HibuCoText-Regular, Hibu Co Text, Open Sans\"\n                >\n                  <tspan x=\"-55\" y=\"0\">\n                    CHAT\n                  </tspan>\n                </text>\n              </svg>\n            </div>\n          </section>\n        </header>\n      ) : (\n        <header id=\"insta-header\" className=\"bg-main fixed flex flex-row w-full justify-center items-center p-10\">\n          <section\n            id=\"chat-header\"\n            className=\"flex flex-row items-center w-full\"\n          >\n            <button\n              className=\"btn-col transparent white\"\n              onClick={handleBack}\n              style={{ cursor: \"pointer\", padding: 10 }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"10.5\"\n                height=\"18.366\"\n                viewBox=\"0 0 10.5 18.366\"\n              >\n                <path\n                  d=\"M14.416,15.374l6.949-6.944a1.313,1.313,0,0,0-1.859-1.854l-7.873,7.868a1.31,1.31,0,0,0-.038,1.81L19.5,24.177a1.313,1.313,0,1,0,1.859-1.854Z\"\n                  transform=\"translate(-11.251 -6.194)\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </button>\n            <div className=\"profile-image small ml-auto flex flex-col justify-center items-center\">\n              <div className=\"image-container\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"32\"\n                  height=\"32\"\n                  viewBox=\"0 0 45.004 45.005\"\n                >\n                  <g transform=\"translate(-162 -435)\">\n                    <path\n                      d=\"M21.324,39.963,14.61,43.626a6.034,6.034,0,0,0-1.078.767,22.488,22.488,0,0,0,28.894.075,5.957,5.957,0,0,0-1.184-.793l-7.19-3.594a2.742,2.742,0,0,1-1.516-2.452V34.806a10.859,10.859,0,0,0,.68-.875,16.544,16.544,0,0,0,2.235-4.5,2.258,2.258,0,0,0,1.6-2.148V24.268A2.248,2.248,0,0,0,36.3,22.6V18.247s.894-6.774-8.279-6.774-8.279,6.774-8.279,6.774V22.6a2.245,2.245,0,0,0-.752,1.669v3.011a2.257,2.257,0,0,0,1.041,1.894,14.942,14.942,0,0,0,2.722,5.632v2.751A2.745,2.745,0,0,1,21.324,39.963Z\"\n                      transform=\"translate(156.481 430.321)\"\n                      fill=\"#e7eced\"\n                    />\n                    <g transform=\"translate(162 435)\">\n                      <path\n                        d=\"M22.887,0a22.488,22.488,0,0,0-14.864,39.7,5.979,5.979,0,0,1,1.067-.759L15.8,35.285a2.743,2.743,0,0,0,1.429-2.407V30.126a14.928,14.928,0,0,1-2.722-5.632A2.258,2.258,0,0,1,13.47,22.6V19.588a2.248,2.248,0,0,1,.752-1.669V13.567S13.328,6.793,22.5,6.793s8.279,6.774,8.279,6.774V17.92a2.245,2.245,0,0,1,.752,1.669V22.6a2.258,2.258,0,0,1-1.6,2.148,16.544,16.544,0,0,1-2.235,4.5,10.86,10.86,0,0,1-.68.875v2.821A2.741,2.741,0,0,0,28.533,35.4l7.19,3.594a5.987,5.987,0,0,1,1.18.791A22.5,22.5,0,0,0,22.887,0Z\"\n                        transform=\"translate(0 0)\"\n                        fill=\"#556080\"\n                      />\n                    </g>\n                  </g>\n                </svg>\n              </div>\n              <p className=\"font-14 tracking-05 font-normal white m-0 mt-5\">\n                {chattingWith}\n              </p>\n            </div>\n            <button\n              className=\"btn-col ml-auto transparent white\"\n              onClick={actionBar}\n              style={{ cursor: \"pointer\" }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"28\"\n                height=\"6\"\n                viewBox=\"0 0 28 6\"\n              >\n                <g transform=\"translate(-325 -65)\">\n                  <circle\n                    cx=\"3\"\n                    cy=\"3\"\n                    r=\"3\"\n                    transform=\"translate(325 65)\"\n                    fill=\"currentColor\"\n                  />\n                  <circle\n                    cx=\"3\"\n                    cy=\"3\"\n                    r=\"3\"\n                    transform=\"translate(336 65)\"\n                    fill=\"currentColor\"\n                  />\n                  <circle\n                    cx=\"3\"\n                    cy=\"3\"\n                    r=\"3\"\n                    transform=\"translate(347 65)\"\n                    fill=\"currentColor\"\n                  />\n                </g>\n              </svg>\n            </button>\n          </section>\n        </header>\n      )}\n\n      {/* <header\n      className=\"flex-row chat monitor flex-center-items  padding-left-10 padding-right-10 only-border-bottom border-width-1 border-style-solid border-grey-200\"\n      style={{ backgroundColor: `${bgColor}` }}\n    >\n      {parseInt(pageType) === 1 && (\n        <button\n          type=\"button\"\n          className=\"btn-action transparent white\"\n          onClick={handleBack}\n        >\n          <Back />\n        </button>\n      )}\n      <div className=\"branding h-35-px\" style={{ margin: \"auto\" }}>\n        {/* eslint-disable-next-line */}\n      {/* <img\n          className=\"full-height\"\n          src={logoURL}\n          alt=\"alive5 logo image\"\n          srcSet=\"\"\n        />\n      </div>\n      {parseInt(pageType) !== 0 && (\n        <>\n          {parseInt(pageType) === 1 && thread_type === \"livechat\" ? (\n            <button\n              id=\"close\"\n              className=\"btn-action transparent white\"\n              type=\"button\"\n              data-toggle=\"modal\"\n              data-target=\"#exampleModal \"\n            >\n              <Cross />\n            </button>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n       \n    </header> */}\n      {/* <ToastContainer />  */}\n    </>\n  );\n};\n\nexport default Header;\n","import Header from \"../header\";\nimport './style.css';\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst ThreadList = (props) => {\n  const { threadListing:threadList } = useSelector((state) => state.global);\n  const { redirectDataObj, redirect, threadListingType, fetchThreadList, chatAssignCheck,ToastContainer, lastBookElementRef } = props;\n  return (\n    <div id=\"app-wrapper\" className=\"h-full open-sans\">\n    {<Header pageType={1} threadsList={ threadList} threadListingType = { threadListingType}/>}\n    {/* {redirect to monitor and chat view} */}\n    {redirect === \"ChatView\" && (\n      <Redirect\n        to={{\n          pathname: `/ChatView/${redirectDataObj.org_name}/${redirectDataObj.thread_id}`,\n          state: redirectDataObj,\n        }}\n      />\n    )}\n    {redirect === \"MonitorView\" && (\n      <Redirect\n        to={{\n          pathname: `/MonitorView/${redirectDataObj.org_name}/${redirectDataObj.thread_id}`,\n          state: redirectDataObj,\n        }}\n      />\n    )}\n\n      <div className=\"bg-secondary fixed thread-list-container w-full\" style={{ overflow: \"scroll\" }}>\n        <ToastContainer/>\n        <section\n          id=\"active-threads\"\n          className=\"h-full overflow-y-scroll w-full\"\n        >\n          {threadList.length > 0 &&\n            threadList.map((item, index) => (\n              <div\n                ref = {(threadList.length === index + 1)?lastBookElementRef: null}\n                className=\"thread border-solid border-0 border-gray-500 border-b-1 p-20 flex flex-row items-center w-full\"\n                key={item.thread_id}\n                style={{cursor: \"pointer\"}}\n                onClick={() =>\n                  chatAssignCheck({\n                    thread_id: item?.thread_id,\n                    org_name: item?.org_name,\n                    thread_type: item?.thread_type,\n                    platform: item?.platform,\n                  })\n                }\n              >\n                <div className=\"profile-image flex flex-col items-center justify-center mr-10 blue-100\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"45\"\n                    height=\"45\"\n                    viewBox=\"0 0 45.004 45.005\"\n                  >\n                    <g transform=\"translate(-162 -435)\">\n                      <path\n                        d=\"M21.324,39.963,14.61,43.626a6.034,6.034,0,0,0-1.078.767,22.488,22.488,0,0,0,28.894.075,5.957,5.957,0,0,0-1.184-.793l-7.19-3.594a2.742,2.742,0,0,1-1.516-2.452V34.806a10.859,10.859,0,0,0,.68-.875,16.544,16.544,0,0,0,2.235-4.5,2.258,2.258,0,0,0,1.6-2.148V24.268A2.248,2.248,0,0,0,36.3,22.6V18.247s.894-6.774-8.279-6.774-8.279,6.774-8.279,6.774V22.6a2.245,2.245,0,0,0-.752,1.669v3.011a2.257,2.257,0,0,0,1.041,1.894,14.942,14.942,0,0,0,2.722,5.632v2.751A2.745,2.745,0,0,1,21.324,39.963Z\"\n                        transform=\"translate(156.481 430.321)\"\n                        fill=\"#e7eced\"\n                      />\n                      <g transform=\"translate(162 435)\">\n                        <path\n                          d=\"M22.887,0a22.488,22.488,0,0,0-14.864,39.7,5.979,5.979,0,0,1,1.067-.759L15.8,35.285a2.743,2.743,0,0,0,1.429-2.407V30.126a14.928,14.928,0,0,1-2.722-5.632A2.258,2.258,0,0,1,13.47,22.6V19.588a2.248,2.248,0,0,1,.752-1.669V13.567S13.328,6.793,22.5,6.793s8.279,6.774,8.279,6.774V17.92a2.245,2.245,0,0,1,.752,1.669V22.6a2.258,2.258,0,0,1-1.6,2.148,16.544,16.544,0,0,1-2.235,4.5,10.86,10.86,0,0,1-.68.875v2.821A2.741,2.741,0,0,0,28.533,35.4l7.19,3.594a5.987,5.987,0,0,1,1.18.791A22.5,22.5,0,0,0,22.887,0Z\"\n                          transform=\"translate(0 0)\"\n                          fill=\"#556080\"\n                        />\n                      </g>\n                    </g>\n                  </svg>\n                </div>\n                <div className=\"user-info flex flex-col\">\n                  <p className=\"user-name white font-medium font-16 m-0 mb-10\">\n                    {item.phone_mobile ||\n                      item?.crmData?.email ||\n                      (item?.crmData?.first_name,\n                      \" \",\n                      item?.crmData?.last_name) ||\n                      \"Visitor\"}\n                  </p>\n                  <p className=\"breadcrumb blue-400 font-normal font-14 m-0\">\n                    {item?.thread_type === \"sms\" && item?.platform !== \"FB\"\n                      ? \"via SMS\"\n                      : item?.platform === \"FB\"\n                      ? \"via Facebook\"\n                      : \"via LiveChat\"}\n                  </p>\n                </div>\n                {item.thread_type === \"livechat\" &&\n                parseInt(threadListingType) === 2 ? (\n                  <div className=\"thread-info ml-auto mt-5 self-start\">\n                    <div className=\"active-status flex flex-row items-center red-300\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"8.251\"\n                        height=\"17.201\"\n                        viewBox=\"0 0 8.251 17.201\"\n                      >\n                        <path\n                          d=\"M1.5,10.231l1.564,1.564a9.952,9.952,0,0,1,14.073,0L18.7,10.231A12.17,12.17,0,0,0,1.5,10.231Zm3.127,3.127,1.564,1.564a5.531,5.531,0,0,1,7.819,0l1.564-1.564A7.749,7.749,0,0,0,4.627,13.358Z\"\n                          transform=\"translate(-6.671 18.701) rotate(-90)\"\n                          fill=\"currentColor\"\n                        />\n                      </svg>\n                      <p className=\" m-0 ml-5 font-12 font-bold\">ACTIVE NOW</p>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"thread-info mt-5 flex flex-row items-start self-start ml-auto\">\n                      <div className=\"timestamp\">\n                        <p className=\"font-bold blue-400 m-0 font-14\">\n                          {parseInt(threadListingType) === 2\n                            ? item?.last_active_time\n                            : item.history_thread_timestamp}\n                        </p>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          {/* <div className=\"thread border-solid border-0 border-gray-500 border-b-1 p-20 flex flex-row items-center w-full\">\n            <div className=\"profile-image flex flex-col items-center justify-center mr-10 blue-100\">\n              <div className=\"image-container\">\n                <img\n                  src=\"https://randomuser.me/api/portraits/women/90.jpg\"\n                  alt=\"profile image\"\n                  srcset=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"user-info flex flex-col\">\n              <p className=\"user-name white font-medium font-16 m-0 mb-10\">\n                malreynolds@aol.com\n              </p>\n              <p className=\"breadcrumb blue-400 font-normal font-14 m-0\">\n                via Facebook Messenger\n              </p>\n            </div>\n            <div className=\"thread-info mt-5 flex flex-row items-start self-start ml-auto\">\n              <div className=\"timestamp\">\n                <p className=\"font-bold blue-400 m-0 font-14\">2 min ago</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"thread border-solid border-0 border-gray-500 border-b-1 p-20 flex flex-row items-center w-full\">\n            <div className=\"profile-image flex flex-col items-center justify-center mr-10 blue-100\">\n              <div className=\"image-container\">\n                <img\n                  src=\"https://randomuser.me/api/portraits/men/11.jpg\"\n                  alt=\"profile image\"\n                  srcset=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"user-info flex flex-col\">\n              <p className=\"user-name white font-medium font-16 m-0 mb-10\">\n                Joel Miller\n              </p>\n              <p className=\"breadcrumb blue-400 font-normal font-14 m-0\">\n                via Google Business Manager\n              </p>\n            </div>\n            <div className=\"thread-info mt-5 flex flex-row items-start self-start ml-auto\">\n              <div className=\"timestamp\">\n                <p className=\"font-bold blue-400 m-0 font-14\">3 hr ago</p>\n              </div>\n            </div>\n          </div> */}\n        </section>\n    </div>\n    <footer className=\"bg-main flex fixed flex-row w-full justify-around items-center p-10\">\n      <button\n        className={\n          parseInt(threadListingType) === 2\n            ? \"btn-col transparent gray items-center justify-center active\"\n            : \"btn-col transparent gray items-center justify-center\"\n        }\n        type=\"button\"\n        onClick={() => {\n          fetchThreadList(2);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24.005\"\n          viewBox=\"0 0 29 29.005\"\n        >\n          <g transform=\"translate(-68 -8.252)\">\n            <g transform=\"translate(68 8.252)\">\n              <path\n                d=\"M29.946,11.981H14.365a2.683,2.683,0,0,0-2.679,2.679V25.509a2.677,2.677,0,0,0,2.679,2.672H23.28a.768.768,0,0,1,.534.225l4.43,4.085c.246.239.654.141.654-.2V28.73c0-.422.267-.555.689-.555h.07a2.927,2.927,0,0,0,2.96-2.672V14.66A2.668,2.668,0,0,0,29.946,11.981Z\"\n                transform=\"translate(-3.618 -3.618)\"\n                fill=\"currentColor\"\n              />\n              <path\n                d=\"M12.262,10.259H24.736V5.667a2.293,2.293,0,0,0-2.292-2.292H5.667A2.293,2.293,0,0,0,3.375,5.667V17.283a2.293,2.293,0,0,0,2.292,2.292h4.3V12.551A2.3,2.3,0,0,1,12.262,10.259Z\"\n                transform=\"translate(-3.375 -3.375)\"\n                fill=\"currentColor\"\n              />\n            </g>\n          </g>\n        </svg>\n        <span className=\"font-12 font-normal\">ACTIVE</span>\n      </button>\n      <button\n        className={\n          parseInt(threadListingType) === 1\n            ? \"btn-col transparent gray items-center justify-center active\"\n            : \"btn-col transparent gray items-center justify-center \"\n        }\n        type=\"button\"\n        onClick={() => {\n          fetchThreadList(1);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24.94\"\n          height=\"24.94\"\n          viewBox=\"0 0 22.94 22.94\"\n        >\n          <path\n            d=\"M23.5,12.011A11.47,11.47,0,0,1,4.834,20.963a1.109,1.109,0,0,1-.085-1.647l.521-.521A1.112,1.112,0,0,1,6.745,18.7,8.51,8.51,0,1,0,6.2,5.832L8.549,8.179a.74.74,0,0,1-.523,1.263H1.3a.74.74,0,0,1-.74-.74V1.979a.74.74,0,0,1,1.263-.523L4.109,3.739A11.47,11.47,0,0,1,23.5,12.011Zm-8.367,3.644.454-.584a1.11,1.11,0,0,0-.195-1.558l-1.882-1.464V7.222a1.11,1.11,0,0,0-1.11-1.11h-.74a1.11,1.11,0,0,0-1.11,1.11V13.5l3.025,2.353a1.11,1.11,0,0,0,1.558-.195Z\"\n            transform=\"translate(-0.563 -0.563)\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <span className=\"font-12 font-normal\">HISTORY</span>\n      </button>\n    </footer>\n  </div>\n  );\n};\n\nexport default ThreadList;\n","import React, { useLayoutEffect,useEffect, useState, useCallback } from \"react\";\n// import Header from \"../../components/header\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SocketService from \"../../library/socket\";\nimport moment from \"moment\";\nimport jwt from \"jsonwebtoken\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { threadlisting } from \"../../library/apiServices/webApi\";\nimport { setThreadListing, setUserData } from \"../../library/redux/actions\";\nimport { getJwtToken } from \"../../library/apiServices/webApi\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Intro from \"../intro\";\nimport ThreadList from \"../../components/threadsList\";\n// const Messages = React.lazy(() => import(\"../../components/icons/messages\"));\n// const Livechat = React.lazy(() => import(\"../../components/icons/livechat\"));\n// const FaceBook = React.lazy(() => import(\"../../components/icons/faceBook\"));\n\nconst Queue = (props) => {\n  const { threadListing, userData } = useSelector((state) => state.global);\n  const { instant_token } = useParams(); //props.match.params\n  const [redirect, setredirect] = useState(\"\");\n  const [redirectDataObj, setredirectDataObj] = useState({});\n  const [isIntro, setisIntro] = useState(false);\n  const [limit, setlimit] = useState(10);\n  const threadListingType = localStorage.getItem(\"threadListing\") || 2;\n  const observer = React.createRef();\n\n  const dispatch = useDispatch();\n  // const [isViewHistory, setisViewHistory] = useState(false);\n  const fetchThreadList = (view_history = 2) => {\n    // setisIntro(false);\n    if (view_history === 1) {\n      localStorage.setItem(\"threadListing\", 1);\n      // setisViewHistory(true);\n    } else {\n      localStorage.setItem(\"threadListing\", 2);\n      // setisViewHistory(false);\n    }\n    const token = localStorage.getItem(\"user\");\n    if (token) {\n      var decoded = jwt.decode(token, { complete: true });\n      localStorage.setItem(\"userData\", JSON.stringify(decoded.payload));\n      dispatch(setUserData(decoded.payload));\n      threadlisting(token, view_history, limit)\n        .then((resp) => {\n          setisIntro(true);\n          if (resp && resp?.data?.length > 0) {\n            const ph = resp?.data.map((item) => {\n              const createdAt =\n                item.lastmessage_at ||\n                item.updated_at ||\n                item.created_at ||\n                moment().valueOf();\n              return {\n                phone_mobile: item.phone_mobile,\n                thread_type: item.thread_type,\n                thread_id: item.thread_id,\n                org_name: item.org_name,\n                crm_id: item.crm_id,\n                alivesecure_key: item?.alivesecure_key,\n                aliveOpentokSession: item?.aliveOpentokSession || \"\",\n                status: item?.thread_status,\n                status_timestamp: item?.updated_at,\n                timestamp: item?.timestamp,\n                created_by: item.created_by,\n                history_thread_timestamp: moment\n                  .unix(createdAt / 1000)\n                  .format(\"MM/DD/YY\"),\n                last_active_time: moment.unix(createdAt / 1000).fromNow(),\n                assignedTo: item?.assignedTo,\n                phone_number: item?.phone_mobile || \"\",\n                smsblocked: item?.user_blocked ? item?.user_blocked : false,\n                platform: item?.platform || \"\",\n                sms_platform: item?.platform || \"\",\n                alivesms_phone_number: \"\",\n                channel_id: item?.channel_id,\n                crmData: item?.crmData || {},\n                campaign_pending: item?.campaign_pending || \"\",\n                lastmessage_at: item.lastmessage_at,\n              };\n            });\n            dispatch(setThreadListing(ph));\n          } else {\n            dispatch(setThreadListing([]));\n          }\n        })\n        .catch((err) => {\n          toast(\"Short Link is Expired. try again later with a new link!\");\n          // console.log(\"Error occured: \", err)\n        });\n    } else {\n      toast(\"Token not available!\");\n      // console.log(\"User Token is not available\");\n    }\n  };\n  const chatAssignCheck = ({ thread_id, org_name, thread_type }) => {\n    // console.log(\"Attempt===>\", thread_id, thread_type, org_name);\n    let threadExistedObj = threadListing?.find(\n      (item) => item.thread_id === thread_id\n    );\n    // console.log(\"active thread\", threadExistedObj);\n    if (\n      threadExistedObj &&\n      threadExistedObj.assignedTo === userData.user_id &&\n      threadExistedObj.status !== \"closed\"\n    ) {\n      setredirectDataObj({\n        thread_id: thread_id,\n        org_name: org_name,\n        thread_type: thread_type,\n        crm_id: threadExistedObj?.crm_id,\n        thread_status: threadExistedObj.status,\n        platform: threadExistedObj?.platform || \"platform\",\n      });\n      setredirect(\"ChatView\");\n    } else {\n      setredirect(\"MonitorView\");\n      setredirectDataObj({\n        thread_id: thread_id,\n        org_name: org_name,\n        thread_type: thread_type,\n        crm_id: threadExistedObj?.crm_id,\n        thread_status: threadExistedObj.status,\n        platform: threadExistedObj?.platform || \"platform\",\n      });\n    }\n  };\n  const jwtToken = () => {\n    try {\n      getJwtToken(instant_token)\n        .then((jwtData) => {\n          let curTime = new Date().toLocaleString();\n          localStorage.setItem(\"user\", jwtData.data.token);\n          localStorage.setItem(\"time\", curTime);\n          SocketService.getInstance();\n          let threadViewStatus =\n            parseInt(localStorage.getItem(\"threadListing\")) || 2;\n          if (threadViewStatus === 1) {\n            // setisViewHistory(false);\n          }\n          fetchThreadList(threadViewStatus);\n        })\n        .catch((error) => {\n          // console.log(\"error is\", error);\n          toast(error);\n        });\n    } catch (e) {\n      // console.log(\"error is\", e);\n      toast(e);\n    }\n  };\n  const lastBookElementRef = useCallback(\n    // (*)\n    (node) => {\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting) {\n          setlimit((prev) => prev + 10);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    // eslint-disable-next-line\n    []\n  );\n  useEffect(() => {\n    const token = localStorage.getItem(\"user\");\n    if (token){\n      let threadViewStatus =parseInt(localStorage.getItem(\"threadListing\")) || 2;\n          fetchThreadList(threadViewStatus);\n    }\n    // eslint-disable-next-line\n  }, [limit])\n  \n  useLayoutEffect(() => {\n    jwtToken();\n    // setTimeout(() => {\n    //   setisIntro(true);\n    // }, 3000);\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <>\n      {!isIntro ? (\n        <Intro />\n      ) : (\n        <ThreadList\n          threadList={threadListing}\n          fetchThreadList={(threadListType) => fetchThreadList(threadListType)}\n          threadListingType={threadListingType}\n          redirect={redirect}\n          ToastContainer={ToastContainer}\n          redirectDataObj={redirectDataObj}\n          chatAssignCheck={chatAssignCheck}\n          lastBookElementRef={lastBookElementRef}\n          // chatAssignCheck={(threadObj) => chatAssignCheck(threadObj)}\n        />\n      )}\n    </>\n  );\n};\nexport default Queue;\n","import { useState } from \"react\";\nimport \"./style.css\";\nimport { sendMessage } from \"../../library/apiServices/webApi\";\nimport SocketService from \"../../library/socket\";\nimport { useDispatch } from \"react-redux\";\nimport { setAgentLoading } from \"../../library/redux/actions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import EmojiPicker from \"../emojiPicker\";\n// const Attachment = React.lazy(() => import(\"../icons/attachment\"));\n// const Send = React.lazy(() => import(\"../icons/send\"));\n// const Emoji = React.lazy(() => import(\"../icons/emoji\"));\n\nconst ChatInput = (props) => {\n  // eslint-disable-next-line\n  // const [pickerOpen, togglePicker] = React.useReducer((state) => !state, false);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const { activeThread } = props;\n  // const [messageCount, setmessageCount] = useState(0);\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n  const dispatch = useDispatch();\n  const socket = SocketService.getInstance();\n  const sendSMSMessage = async () => {\n    const token = localStorage.getItem(\"user\");\n    if (currentMessage !== \"\") {\n      let replyBody = {\n        crm_id: activeThread?.crm_id,\n        alivesecure_key: activeThread?.alivesecure_key,\n        aliveOpentokSession: activeThread?.aliveOpentokSession || \"\",\n        status: activeThread?.thread_status,\n        status_timestamp: activeThread?.updated_at,\n        timestamp: Date.now(),\n        thread_type: \"sms\",\n        crmData: activeThread?.crmData || {},\n        org_name: activeThread?.org_name,\n        thread_id: activeThread?.thread_id,\n        created_by: activeThread?.created_by || \"instauser\",\n        user_id: userData?.user_id,\n        assignedTo: activeThread?.assignedTo,\n        message: currentMessage,\n        visible_to_channel: activeThread?.visible_to_channel || \"\",\n        screen_name: activeThread?.screen_name || \"\",\n        phone_number: activeThread?.phone_mobile || \"\",\n        psid: activeThread?.psid || \"\",\n        userjoined: \"\",\n        smsblocked: activeThread?.user_blocked\n          ? activeThread?.user_blocked\n          : false,\n        user_opt: activeThread?.user_optfalse,\n        platform: activeThread?.platform || \"\",\n        sms_platform: \"bandwidth\",\n        alivesms_phone_number: activeThread?.channel_number || \"\",\n        channel_id: activeThread?.channel_id,\n        tags: [],\n        files: \"\",\n        isVideo: false,\n        mediaurl: \"\",\n        bandwidthError: \"\",\n        campaigns_applied: [],\n      };\n      if (activeThread?.platform === \"FB\") {\n        replyBody.fbPageID = activeThread.fbPageID;\n      }\n      setCurrentMessage(\"\");\n      // setmessageCount(0);\n      await sendMessage(replyBody, token);\n    }\n  };\n  const sendLiveChatMessage = async () => {\n    let crmData = {};\n    if (currentMessage !== \"\") {\n      if (activeThread?.crmData) {\n        crmData = {\n          crmId:\n            activeThread?.crmData.crmId || activeThread?.crmData.crm_id || \"\",\n          oldCrmId: activeThread?.crmData.old_crm_id || \"\",\n          orgName:\n            activeThread?.crmData.orgName ||\n            activeThread?.crmData.org_name ||\n            \"\",\n          firstName:\n            activeThread?.crmData.firstName ||\n            activeThread?.crmData.first_name ||\n            \"\",\n          lastName:\n            activeThread?.crmData.lastName ||\n            activeThread?.crmData.last_name ||\n            \"\",\n          notes: activeThread?.crmData.notes || [],\n          email: activeThread?.crmData.email || \"\",\n          phoneMobile:\n            activeThread?.crmData.phoneMobile ||\n            activeThread?.crmData.phone_mobile ||\n            \"\",\n          company: activeThread?.crmData.company || \"\",\n          image: activeThread?.crmData.image || \"\",\n          address: activeThread?.crmData.address || \"\",\n          billing_address: activeThread?.crmData.billing_address || \"\",\n          billing_city: activeThread?.crmData.billing_city || \"\",\n          billing_country: activeThread?.crmData.billing_country || \"\",\n          billing_state: activeThread?.crmData.billing_state || \"\",\n          billing_zip: activeThread?.crmData.billing_zip || \"\",\n          linkedin: activeThread?.crmData.linkedin || \"\",\n          instagram: activeThread?.crmData.instagram || \"\",\n          whatsapp: activeThread?.crmData.whatsapp || \"\",\n          accountid: activeThread?.crmData.accountid || \"\",\n          snapchat: activeThread?.crmData.snapchat || \"\",\n          wechat: activeThread?.crmData.wechat || \"\",\n          viber: activeThread?.crmData.viber || \"\",\n          faq_question: activeThread?.crmData.faq_question || \"\",\n          youtube: activeThread?.crmData.youtube || \"\",\n          facebook: activeThread?.crmData.facebook || \"\",\n          twitter: activeThread?.crmData.twitter || \"\",\n          companytitle: activeThread?.crmData.companytitle || \"\",\n          city: activeThread?.crmData.city || \"\",\n          user_state: activeThread?.crmData.user_state || \"\",\n          country: activeThread?.crmData.country || \"\",\n          xip: activeThread?.crmData.xip || \"\",\n        };\n      } // end of crmData if\n      let newThread = {\n        alivesecure_key: activeThread?.alivesecureKey || \"\",\n        aliveOpentokSession: activeThread?.aliveOpentokSession || \"\",\n        assignedTo:\n          typeof activeThread?.assignedTo === \"object\"\n            ? activeThread?.assignedTo.userId\n            : activeThread?.assignedTo || \"0\",\n        channel_id: activeThread?.channel_id,\n        channelName: activeThread?.channel_name,\n        created_at: activeThread?.created_at || \"\",\n        connect_botchain: activeThread?.connect_botchain || \"\",\n        connect_orgbot: activeThread?.connect_orgbot || \"\",\n        crm_id: activeThread?.crm_id || \"\",\n        lastmessage_at: activeThread?.lastmessage_at || \"\",\n        order_viewed: activeThread?.orderViewed || \"\",\n        order_viewed_by: activeThread?.orderViewedBy || \"\",\n        org_name: activeThread?.org_name || \"\",\n        thread_id: activeThread?.thread_id || \"\",\n        thread_status: activeThread?.thread_status || \"\",\n        thread_type: activeThread?.thread_type || \"\",\n        updated_at: activeThread?.updated_at,\n        timestamp: activeThread?.updated_at,\n        livechatimageurl: activeThread?.livechatimageurl || \"\",\n        orgbot_content: activeThread?.orgbot_content || \"\",\n        agent_bot_id: activeThread?.agent_bot_id || \"\",\n        widget_id: activeThread?.widget_id || \"\",\n        googletrackerid: activeThread?.googletrackerid || \"\",\n        user_blocked: activeThread?.userBlocked ? true : false,\n        transferchat_from: activeThread?.transferchat_from || \"\",\n        crmData: crmData,\n      };\n      let data = {\n        org_name: userData?.orgName,\n        thread_id: activeThread?.thread_id || undefined,\n        message_type: \"livechat\",\n        route: \"123\",\n        created_by: userData?.sceenName,\n        profile_url: userData?.profile_url || \"\",\n        user_id: userData?.user_id,\n        message_content: currentMessage,\n        event_mode: \"redis\",\n        crm_id: activeThread?.crm_id,\n        channel_id: activeThread?.channel_id,\n        newThread: newThread,\n      };\n      setCurrentMessage(\"\");\n      // setmessageCount(0);\n      dispatch(setAgentLoading(false));\n      socket.replyToLiveChatMessage(data);\n    }\n  };\n  return (\n    <footer className=\"bg-main flex fixed flex-row w-full justify-center items-center p-10\">\n      <button\n        title=\"Click here to upload an image\"\n        className=\"btn-col ml-10 p-0 transparent white\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n      <section\n        id=\"messenger-textarea-section\"\n        className=\"p-10 w-full flex flex-row items-center relative\"\n      >\n        <textarea\n          name=\"messenger-textarea\"\n          id=\"messenger-textarea\"\n          className=\"p-10 pr-25\"\n          placeholder=\"Your message...\"\n          aria-label=\"send a message\"\n          value={currentMessage}\n          onChange={(event) => {\n            event.preventDefault();\n            setCurrentMessage(event.target.value);\n          }}\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              event.preventDefault();\n              activeThread?.thread_type === \"livechat\"\n                ? sendLiveChatMessage()\n                : sendSMSMessage();\n            }\n          }}\n        ></textarea>\n      </section>\n    </footer>\n  );\n};\n\n// console.log(\"ChatInput loading\", Date.now());\n\nexport default ChatInput;\n","import {useSelector} from 'react-redux'\n\nconst Action = (props) => {\n    const { closeChat, deleteThread } = props;\n  const { chattingWith } = useSelector((state) => state.global);\n  return (\n    <div>\n      <section id=\"action-bar\">\n        <div className=\"container absolute bg-main\">\n          <div className=\"bar-header p-20 border-0 border-b-1 border-solid border-gray-500\">\n                      <p className=\"m-0 white font-medium\">{chattingWith }</p>\n          </div>\n          <button className=\"bar-item blue-200 transparent btn-block\" onClick={closeChat} style ={{cursor: \"pointer\"}}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              className=\"icon left\"\n              viewBox=\"0 0 16 16\"\n            >\n              <g transform=\"translate(-32 -650)\">\n                <path\n                  id=\"Icon_material-chat-bubble\"\n                  data-name=\"Icon material-chat-bubble\"\n                  d=\"M17.4,3H4.6A1.6,1.6,0,0,0,3,4.6V19l3.2-3.2H17.4A1.6,1.6,0,0,0,19,14.2V4.6A1.6,1.6,0,0,0,17.4,3Z\"\n                  transform=\"translate(29 647)\"\n                  fill=\"#3bc9f5\"\n                />\n                <path\n                  id=\"Icon_open-arrow-thick-left\"\n                  data-name=\"Icon open-arrow-thick-left\"\n                  d=\"M3.5,0,0,3.535,3.5,7V4.667H9.333V2.333H3.5Z\"\n                  transform=\"translate(35.333 653)\"\n                  fill=\"#1e1e2f\"\n                />\n              </g>\n            </svg>\n            <span className=\"white font-16\">End Chat</span>\n          </button>\n          {/* <button className=\"bar-item blue-200 transparent btn-block\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"17.1\"\n              className=\"icon left\"\n              viewBox=\"0 0 18 17.1\"\n            >\n              <path\n                d=\"M12,16.743,17.562,20.1l-1.476-6.327L21,9.516l-6.471-.549L12,3,9.471,8.967,3,9.516l4.914,4.257L6.438,20.1Z\"\n                transform=\"translate(-3 -3)\"\n                fill=\"#3bc9f5\"\n              />\n            </svg>\n            <span className=\"white font-16\">Add to Starred</span>\n          </button> */}\n          <button className=\"bar-item blue-200 transparent btn-block\" onClick = {deleteThread} style={{cursor: \"pointer\"}}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"18\"\n              className=\"icon left\"\n              viewBox=\"0 0 14 18\"\n            >\n              <path\n                d=\"M8.5,20.5a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V8.5H8.5Zm2.46-7.12,1.41-1.41,2.13,2.12,2.12-2.12,1.41,1.41L15.91,15.5l2.12,2.12-1.41,1.41L14.5,16.91l-2.12,2.12-1.41-1.41,2.12-2.12ZM18,5.5l-1-1H12l-1,1H7.5v2h14v-2Z\"\n                transform=\"translate(-7.5 -4.5)\"\n                fill=\"currentColor\"\n              />\n            </svg>\n            <span className=\"white font-16\">Delete Chat</span>\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default Action;\n","import Header from \"../header\";\nimport \"./style.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ChatInput from \"../chatInput\";\nimport { useSelector } from \"react-redux\";\nimport ActionBar from \"../action-bar\";\n\nconst Chat = (props) => {\n  const { messagesList } = useSelector((state) => state.global);\n  const [actionBar, setactionBar] = useState(false);\n  const messagesRef = useRef(null);\n  const { handleBack, toast, redirect, userData, thread_type, activeThread, ToastContainer, closeChat, deleteThread, setredirect,firstMessageElementRef , limit} = props;\n  useEffect(() => {\n    messagesRef?.current?.scrollIntoView(true);\n  }, [messagesList]);\n  // console.log('active thread', activeThread);\n  const actionBarFun = () => {\n    // console.log(\"action bar\", actionBar)\n    setactionBar(!actionBar);\n  };\n  console.log(\"redirect\", redirect);\n  return (\n    <div\n      id=\"app-wrapper\"\n      className=\"grid  h-full w-full open-sans layout-grid\"\n      style={{ position: \"fixed\", top: 0}}\n    >\n      <Header\n        handleBack={handleBack}\n        thread_id={activeThread?.thread_id}\n        toast={toast}\n        actionBar={actionBarFun}\n        setredirect={setredirect}\n      />\n      {/* <ToastContainer/> */}\n      {redirect === \"Home\" && (\n        <Redirect\n          to={{\n            pathname: `/${userData.shortCode}`,\n          }}\n        />\n      )}\n      <main id=\"message-list-container\" className=\"bg-secondary fixed message-list-container w-full\">\n        <ToastContainer style={{'top': '80px'}} containerId=\"message-list-container\" />\n        <section id=\"message-list\" className=\"h-full overflow-y-scroll w-full\">\n          <div className=\"conversation-bubbles p-20\">\n            {messagesList?.map((item, index) => (\n              <div key={index} ref = {(index === 1)?firstMessageElementRef: null}>\n                \n                {item.direction === \"Inbound\" ||\n                (thread_type === \"livechat\" && !item.created_by) ? (\n                  <div className=\"visitor bubble-group\" key={index}>\n                    <div className=\"bubble\" key={index}>\n                      <p className=\"m-0\">{item?.message_content}</p>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"agent bubble-group\" key={index}>\n                    <div className=\"bubble\" key={item.created_at}>\n                      <p className=\"m-0\">{item?.message_content}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          <div ref={limit<=20? messagesRef : null}> </div>\n        </section>\n      </main>\n        <ChatInput activeThread={activeThread} />\n      {actionBar && (\n        <ActionBar closeChat={closeChat} deleteThread={deleteThread} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React,{ useEffect, useState , useLayoutEffect, useCallback} from \"react\";\nimport {\n  messagelisting,\n  fetchSingleThread,\n  updateLiveChatThreadStatus,\n  liveChatMessageslist,\n  deleteThread\n} from \"../../library/apiServices/webApi\";\nimport {  useDispatch } from \"react-redux\";\nimport {\n  setChatCrossButtonStatus,\n  setChatWith,\n} from \"../../library/redux/actions\";\nimport { setMessages } from \"../../library/redux/actions\";\n// import moment from \"moment\";\n// import { Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import Header from \"../../components/header\";\n// import Messages from \"../../components/icons/messages\";\n// import Livechat from \"../../components/icons/livechat\";\n// import FaceBook from \"../../components/icons/faceBook\";\n// import ChatInput from \"../../components/chatInput\";\n// import BubbleLoading from \"../../components/bubble-loading\";\nimport Chat from \"../../components/chat\";\n\nconst ChatView = (props) => {\n  // const { messagesList } = useSelector((state) => state.global);\n  const dispatch = useDispatch();\n  // const messagesRef = useRef(null);\n  const [activeThread, setactiveThread] = useState();\n  const [redirect, setredirect] = useState(\"\");\n  const [limit, setlimit] = useState(20);\n  const { org_name, thread_id, thread_type, crm_id } =\n    props?.location?.state;\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n  const observer = React.createRef();\n  // useEffect(() => {\n  //   messagesRef?.current?.scrollIntoView(true);\n  // }, [messagesList])\n  const fetchThreadDetails = async () => {\n    try {\n      let threadObj = await fetchSingleThread(thread_id, org_name);\n      if (threadObj && threadObj?.data) {\n        if (threadObj?.data?.thread_status === \"closed\") {\n          setredirect(\"Home\");\n        }\n        if (threadObj?.data?.platform === \"FB\") {\n          dispatch(\n            setChatWith(\n              `${\n                threadObj?.data?.crmData?.first_name +\n                \" \" +\n                threadObj?.data?.crmData?.last_name\n              }`\n            )\n          );\n          dispatch(setChatCrossButtonStatus(false));\n        } else if (threadObj.data?.thread_type === \"sms\") {\n          dispatch(setChatWith(threadObj?.data?.crmData?.phone_mobile));\n          dispatch(setChatCrossButtonStatus(false));\n        } else {\n          dispatch(setChatWith(`${threadObj?.data?.crmData?.first_name}`));\n          dispatch(setChatCrossButtonStatus(true));\n        }\n        setactiveThread(threadObj.data);\n      } else {\n        toast(\"Couldn't find thread!\");\n        console.error(\"Couldn't find thread\");\n      }\n    } catch (e) {\n      toast(\"Error while fetching thread!\");\n      console.error(\"Error while fetching thread\");\n    }\n  };\n  const closeChat = async () => {\n    try {\n      const token = localStorage.getItem(\"user\");\n      // const userData = JSON.parse(localStorage.getItem(\"userData\"))\n      let threadCloseObj = activeThread;\n      threadCloseObj.thread_end_chat_by = \"agent\";\n      threadCloseObj.thread_status = \"closed\";\n      let closeThread = await updateLiveChatThreadStatus(threadCloseObj, token);\n      if (closeThread.error) {\n        toast(closeThread.error);\n        return;\n      }\n      if (closeThread) {\n        toast('Chat is closed successfully.')\n        // console.log(\"closed\", closeThread);\n        setTimeout(() => {\n          setredirect(\"Home\")\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const deleteActiveThreadFn = async () => {\n    try {\n      const token = localStorage.getItem(\"user\");\n      const userData = JSON.parse(localStorage.getItem(\"userData\"))\n      let deleteActiveThread = await deleteThread({ org_name: userData.orgName, thread_id: activeThread.thread_id, crm_id:activeThread?.crm_id, thread_type: activeThread.thread_type}, token);\n      if (deleteActiveThread.error) {\n        toast(deleteActiveThread.error);\n        return;\n      }\n      if (deleteActiveThread) {\n        toast('Chat is Deleted successfully.')\n        // console.log(\"deleted\", deleteActiveThread);\n        setTimeout(() => {\n          setredirect(\"Home\")\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getMessagesList = async () => {\n    // if (!messagesList || !messagesList.length> 0) {\n    const token = localStorage.getItem(\"user\");\n    if (token) {\n      let messagesList;\n      if (thread_type === \"livechat\") {\n        //org_name, crm_id,user_id, token)\n        messagesList = await liveChatMessageslist(\n          org_name,\n          crm_id,\n          userData.user_id,\n          token,\n          limit\n        );\n        // console.log(\"messagesList\", messagesList);\n        if (messagesList) {\n          messagesList = messagesList.data.sort(\n            (a, b) => parseFloat(a.created_at) - parseFloat(b.created_at)\n          );\n          const ph = messagesList.map((item) => {\n            return {\n              message_content: item.message_content,\n              created_at: item.created_at,\n              created_by: item.created_by,\n              From: item.From,\n              direction: item.direction,\n            };\n          });\n\n          dispatch(setMessages(ph));\n        }\n      } else {\n        messagesList = await messagelisting(org_name, thread_id, token, limit);\n        if (messagesList) {\n          const ph = messagesList.data.Items.map((item) => {\n            return {\n              message_content: item.message_content,\n              created_at: item.created_at,\n              created_by: item.created_by,\n              From: item.From,\n              direction: item.direction,\n            };\n          });\n          dispatch(setMessages(ph));\n        }\n      }\n    }\n    // }\n  };\n  useEffect(() => {\n    getMessagesList();\n    // eslint-disable-next-line\n  }, [limit]);\n  useLayoutEffect(() => {\n    fetchThreadDetails();\n    // eslint-disable-next-line\n  }, [])\n  const handleBack = () => {\n    setredirect(\"Home\");\n  };\n  const firstMessageElementRef = useCallback(\n    // (*)\n    (node) => {\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting) {\n          setlimit((prev) => prev + 10);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    // eslint-disable-next-line\n    []\n  ); \n  return (\n    <Chat\n      handleBack={handleBack}\n      activeThread={activeThread}\n      redirect={redirect}\n      setredirect={setredirect}\n      userData={userData}\n      thread_type={thread_type}\n      ToastContainer={ToastContainer}\n      closeChat={closeChat}\n      toast={toast}\n      deleteThread={deleteActiveThreadFn}\n      firstMessageElementRef={firstMessageElementRef}\n      limit={limit}\n    />\n  );\n};\nexport default ChatView;\n","import Header from \"../header\";\nimport './style.css';\nimport { Redirect } from \"react-router-dom\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst MonitorChat = (props) => {\n  const messagesRef = useRef(null);\n  const { messagesList } = useSelector((state) => state.global);\n  const threadListingType = localStorage.getItem(\"threadListing\") || 2\n  const {\n    toast,\n    redirect,\n    redirectDataObj,\n    userData,\n    thread_type,\n    handleBack,\n    assignChatToUsers,\n    activeThread,\n    ToastContainer,\n    setredirect,\n  } = props;\n  console.log('here is the obj', redirectDataObj)\n  useEffect(() => {\n    messagesRef?.current?.scrollIntoView(true);\n  }, [messagesList]);\n  return (\n    <div id=\"app-wrapper\" className=\"grid h-full open-sans layout-grid w-full\">\n      <Header\n        handleBack={handleBack}\n        thread_id={activeThread?.thread_id}\n        setredirect={setredirect}\n        toast={toast}\n      />\n      {/* {redirect to monitor and chat view} */}\n      {redirect === \"ChatView\" && (\n        <Redirect\n          to={{\n            pathname: `/ChatView/${redirectDataObj.org_name}/${redirectDataObj.thread_id}`,\n            state: redirectDataObj,\n          }}\n        />\n      )}\n      {redirect === \"Home\" && (\n        <Redirect\n          to={{\n            pathname: `/${userData.shortCode}`,\n            state: redirectDataObj,\n          }}\n        />\n      )}\n      <main className=\"bg-secondary fixed monitor-list-container w-full\" style={{ overflow: \"scroll\" }}>\n        <ToastContainer style={{'top': '80px'}} containerId=\"monitor-list-container\" />\n        <section id=\"mesage-list\" className=\"h-full overflow-y-scroll w-full\">\n          <div className=\"conversation-bubbles p-20\">\n            {messagesList?.map((item, index) => (\n              <div key={index}>\n                {item.direction === \"Inbound\" ||\n                (thread_type === \"livechat\" && !item.created_by) ? (\n                  <div\n                    className=\"visitor bubble-group\"\n                    key={item.message_content}\n                  >\n                    <div className=\"bubble\" key={index}>\n                      <p className=\"m-0\">{item?.message_content}</p>\n                    </div>\n                  </div>\n                ) : (\n                  <div\n                    className=\"agent bubble-group\"\n                    key={item.message_content}\n                  >\n                    <div className=\"bubble\" key={index}>\n                      <p className=\"m-0\">{item?.message_content}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          <div ref={messagesRef}> </div>\n        </section>\n      </main>\n     {!(parseInt(threadListingType) === 1 && redirectDataObj.thread_type === \"livechat\")  && <footer className=\"bg-secondary flex fixed flex-row w-full justify-center items-center p-10\">\n        <button\n          title=\"Click here to start chatting\"\n          className=\"btn-pill extra outline primary\"\n          style={{ cursor: \"pointer\" }}\n          onClick={assignChatToUsers}\n        >\n          BEGIN CHAT\n        </button>\n      </footer>\n      }\n    </div>\n\n  );\n};\n\nexport default MonitorChat;\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  messagelisting,\n  assignChatToUser,\n  fetchSingleThread,\n  liveChatMessageslist,\n  updateThreadStatus\n} from \"../../library/apiServices/webApi\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setMessages,\n  setChatCrossButtonStatus,\n  setChatWith,\n} from \"../../library/redux/actions\";\n// import moment from \"moment\";\nimport SocketService from \"../../library/socket\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import Header from \"../../components/header\";\n// import Messages from \"../../components/icons/messages\";\n// import Livechat from \"../../components/icons/livechat\";\n// import FaceBook from \"../../components/icons/faceBook\";\nimport MonitorChat from \"../../components/monitor-chat\";\n\nconst MonitorView = (props) => {\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n  const dispatch = useDispatch();\n  const [activeThread, setActiveThread] = useState({});\n  const messagesRef = useRef(null);\n  const socket = SocketService.getInstance();\n  const { org_name, thread_id, thread_type, thread_status, crm_id, platform } =\n    props.location.state;\n  const [redirect, setredirect] = useState(\"\");\n  const [redirectDataObj, setredirectDataObj] = useState({});\n\n  const fetchThreadDetails = async () => {\n    try {\n      let threadObj = await fetchSingleThread(thread_id, org_name);\n      if (threadObj && threadObj.data) {\n        if (threadObj?.data?.platform === \"FB\") {\n          dispatch(\n            setChatWith(\n              `${\n                threadObj?.data?.crmData?.first_name +\n                \" \" +\n                threadObj?.data?.crmData?.last_name\n              }`\n            )\n          );\n          dispatch(setChatCrossButtonStatus(false));\n        } else if (threadObj.data?.thread_type === \"sms\") {\n          dispatch(setChatWith(threadObj?.data?.crmData?.phone_mobile));\n          dispatch(setChatCrossButtonStatus(false));\n        } else {\n          dispatch(setChatWith(`${threadObj?.data?.crmData?.first_name}`));\n          dispatch(setChatCrossButtonStatus(true));\n        }\n        getMessagesList();\n        setActiveThread(threadObj.data);\n      } else {\n        toast(\"Couldn't find thread!\");\n        console.error(\"Couldn't find thread\");\n      }\n    } catch (e) {\n      toast(\"Error while fetching thread!\");\n      console.error(\"Error while fetching thread\");\n    }\n  };\n  const getMessagesList = async () => {\n    const token = localStorage.getItem(\"user\");\n    if (token) {\n      let messagesList;\n      if (thread_type === \"livechat\") {\n        messagesList = await liveChatMessageslist(\n          org_name,\n          crm_id,\n          userData.user_id,\n          token\n        );\n        if (messagesList) {\n          messagesList = messagesList.data.sort(\n            (a, b) => parseFloat(a.created_at) - parseFloat(b.created_at)\n          );\n          const ph = messagesList.map((item) => {\n            return {\n              message_content: item.message_content,\n              created_at: item.created_at,\n              created_by: item.created_by,\n              From: item.From,\n              direction: item.direction,\n            };\n          });\n          dispatch(setMessages(ph));\n          messagesRef?.current?.scrollIntoView(true);\n        }\n      } else {\n        messagesList = await messagelisting(org_name, thread_id, token);\n        if (messagesList) {\n          const ph = messagesList.data.Items.map((item) => {\n            return {\n              message_content: item.message_content,\n              created_at: item.created_at,\n              created_by: item.created_by,\n              From: item.From,\n              direction: item.direction,\n            };\n          });\n          dispatch(setMessages(ph));\n          messagesRef?.current?.scrollIntoView(true);\n        }\n      }\n    }\n  };\n  const assignChatToUsers = async () => {\n    console.log(\"=======start chat click is working=======\");\n    const token = localStorage.getItem(\"user\");\n    let threadObj = {\n      thread_status: \"open\",\n      user_id: userData.user_id,\n      thread_id: thread_id,\n      org_name: org_name,\n      agent_bot_name: \"Bilal test\",\n      created_by: userData.sceenName,\n      profile_url: \"\",\n      thread_start_chat: \"\",\n      assignedTo: userData.user_id,\n      connect_orgbot: \"release\",\n      crm_id: crm_id,\n      connect_botchain: \"release\",\n      accept: true,\n      read_by: userData.user_id,\n      bot_user_id: \"\",\n      chat_accept_flag: true,\n    };\n    if (thread_type === \"livechat\") { //updateThreadStatus\n      threadObj.thread_status = \"chatting\";\n      threadObj.bot_user_id = userData?.orgUserBotId;\n      await assignChatToUser(threadObj, token).then((ress) => {\n        if (ress.code === 200) {\n          threadObj.threadStatus = threadObj.thread_status;\n          socket.joinLiveChatMessageRoom(threadObj);\n          toast(\"Thread is assigned to you!\");\n          setTimeout(() => {\n            setredirect(\"ChatView\");\n          }, 3000);\n        } else {\n          toast(ress.error);\n        }\n        return;\n      });\n    } else {\n      await updateThreadStatus(threadObj, token).then((ress) => {\n        if (ress.code === 200) {\n          threadObj.threadStatus = threadObj.thread_status;\n          socket.joinLiveChatMessageRoom(threadObj);\n          toast(\"Thread is assigned to you!\");\n          setTimeout(() => {\n            setredirect(\"ChatView\");\n          }, 3000);\n        } else {\n          toast(ress.error);\n        }\n        return;\n      });\n    }\n   \n  };\n  const handleBack = () => {\n    setredirect(\"Home\");\n  };\n  useEffect(() => {\n    // let tempMessageId = \"\";\n    setredirectDataObj({\n      thread_id: thread_id,\n      org_name: org_name,\n      thread_type: thread_type,\n      crm_id: crm_id,\n      thread_status: thread_status,\n      platform: platform || \"platform\",\n    });\n\n    fetchThreadDetails();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <MonitorChat\n      redirectDataObj={redirectDataObj}\n      toast={toast}\n      redirect={redirect}\n      userData={userData}\n      thread_type={thread_type}\n      handleBack={handleBack}\n      assignChatToUsers={assignChatToUsers}\n      activeThread={activeThread}\n      ToastContainer={ToastContainer}\n      setredirect= {setredirect}\n    />\n  );\n};\nexport default MonitorView;\n","import \"./App.css\";\n// import React, { Suspense } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Queue from\"./pages/threads\";\nimport ChatView  from \"./pages/chat\";\nimport MonitorView from \"./pages/monitor-chat\";\nconst history = createBrowserHistory();\n\nfunction App() {\n  const routes = [\n    { path: '/:instant_token', name: 'Home', Component: Queue },\n    { path: '/ChatView/:org_name/:thread_id', name: 'ChatView', Component: ChatView },\n    { path: '/MonitorView/:org_name/:thread_id', name: 'MonitorView', Component: MonitorView }\n  ]\n  return (\n    <Router history={history}>\n      <Switch>\n        {routes.map(({ path, Component , name}) => (\n          <Route\n          key={path}\n          exact\n          path={path}\n          render={(routeProps) => (       \n              <Component {...routeProps}/>\n          )}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  SET_MESSAGES,\n  SET_THREAD_LISTING,\n  SET_SINGLE_MESSAGE,\n  SET_USER_DATA,\n  SET_AGENT_LOADING,\n  SET_VISITOR_LOADING,\n  SET_CROSS_BUTTON_STATUS,\n  SET_CHATTING_WITH,\n  SET_SIGNLE_THREAD\n} from \"../constants/types\";\n\nconst initialState = {\n  messagesList: [],\n  threadListing: [],\n  userData: {},\n  agentLoading: false,\n  visitorLoading: false,\n  crossButtonStatus: true,\n  chattingWith : 'N/A'\n};\n// eslint-disable-next-line\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_MESSAGES:\n      return { ...state, messagesList: [...payload] };\n    case SET_SINGLE_MESSAGE:\n      return { ...state, messagesList: [...state.messagesList, payload] };\n    case SET_THREAD_LISTING:\n      return { ...state, threadListing: [...payload] };\n    case SET_USER_DATA:\n      return { ...state, userData: payload };\n    case SET_AGENT_LOADING:\n      return { ...state, agentLoading: payload };\n    case SET_VISITOR_LOADING:\n      return { ...state, visitorLoading: payload };\n    case SET_CROSS_BUTTON_STATUS:\n      return { ...state, crossButtonStatus: payload };\n    case SET_CHATTING_WITH:\n      return { ...state, chattingWith: payload };\n    case SET_SIGNLE_THREAD:\n      return { ...state, threadListing: [payload,...state.threadListing]  };\n    \n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\"\n\nimport globalReducer from './reducers';\n\nconst rootReducer = combineReducers({\n    global: globalReducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './library/redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}